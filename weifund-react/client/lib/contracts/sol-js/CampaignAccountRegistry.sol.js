// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"weifund","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"_campaignID","type":"uint256"}],"name":"accountOf","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"_account","type":"address"}],"name":"campaignOf","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_campaignID","type":"uint256"},{"name":"_account","type":"address"}],"name":"register","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"toCampaign","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"accounts","outputs":[{"name":"","type":"address"}],"type":"function"}],
    binary: "6060604052610330806100126000396000f3606060405236156100565760e060020a60003504637cec2e1581146100585780638f4e43211461006a578063a36f259d1461008e578063dbbdf083146100b2578063ecf8c3d11461027c578063f2a40db814610294575b005b6102b5600054600160a060020a031681565b6102b5600435600081815260016020526040902054600160a060020a03165b919050565b6102c8600435600160a060020a038116600090815260026020526040902054610089565b610056600435602435600080547f5a5d096c000000000000000000000000000000000000000000000000000000006060908152606485905233600160a060020a039081166084528593921691635a5d096c9160a491602091906044908290876161da5a03f11561000257505060405151159050806101465750600081815260016020526040812054600160a060020a031614155b806101aa5750600060009054906101000a9004600160a060020a0316600160a060020a0316632451a899826040518260e060020a028152600401808281526020019150506020604051808303816000876161da5a03f1156100025750506040515190505b8061020e5750600060009054906101000a9004600160a060020a0316600160a060020a031663569eaf61826040518260e060020a028152600401808281526020019150506020604051808303816000876161da5a03f1156100025750506040515190505b806102725750600060009054906101000a9004600160a060020a0316600160a060020a031663f41e3494826040518260e060020a028152600401808281526020019150506020604051808303816000876161da5a03f1156100025750506040515190505b156102d257610002565b6102c860043560026020526000908152604090205481565b6102b5600435600160205260009081526040902054600160a060020a031681565b600160a060020a03166060908152602090f35b6060908152602090f35b816001600050600085815260200190815260200160002060006101000a815481600160a060020a0302191690830217905550826002600050600084600160a060020a031681526020019081526020016000206000508190555050505056",
    unlinked_binary: "6060604052610330806100126000396000f3606060405236156100565760e060020a60003504637cec2e1581146100585780638f4e43211461006a578063a36f259d1461008e578063dbbdf083146100b2578063ecf8c3d11461027c578063f2a40db814610294575b005b6102b5600054600160a060020a031681565b6102b5600435600081815260016020526040902054600160a060020a03165b919050565b6102c8600435600160a060020a038116600090815260026020526040902054610089565b610056600435602435600080547f5a5d096c000000000000000000000000000000000000000000000000000000006060908152606485905233600160a060020a039081166084528593921691635a5d096c9160a491602091906044908290876161da5a03f11561000257505060405151159050806101465750600081815260016020526040812054600160a060020a031614155b806101aa5750600060009054906101000a9004600160a060020a0316600160a060020a0316632451a899826040518260e060020a028152600401808281526020019150506020604051808303816000876161da5a03f1156100025750506040515190505b8061020e5750600060009054906101000a9004600160a060020a0316600160a060020a031663569eaf61826040518260e060020a028152600401808281526020019150506020604051808303816000876161da5a03f1156100025750506040515190505b806102725750600060009054906101000a9004600160a060020a0316600160a060020a031663f41e3494826040518260e060020a028152600401808281526020019150506020604051808303816000876161da5a03f1156100025750506040515190505b156102d257610002565b6102c860043560026020526000908152604090205481565b6102b5600435600160205260009081526040902054600160a060020a031681565b600160a060020a03166060908152602090f35b6060908152602090f35b816001600050600085815260200190815260200160002060006101000a815481600160a060020a0302191690830217905550826002600050600084600160a060020a031681526020019081526020016000206000508190555050505056",
    address: "",
    generated_with: "2.0.6",
    contract_name: "CampaignAccountRegistry"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("CampaignAccountRegistry error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("CampaignAccountRegistry error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("CampaignAccountRegistry error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("CampaignAccountRegistry error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.CampaignAccountRegistry = Contract;
  }

})();
